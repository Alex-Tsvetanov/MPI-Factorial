name: Build & Test
on:
  workflow_dispatch:
  push:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - cxx: g++
            os: windows-latest
          - cxx: g++-11
            os: ubuntu-latest
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        run: |
          choco install mingw --version 11.2.0.07112021 --force
          make --version
          gcc --version
      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y gcc-11 g++-11 make
          make --version
          gcc-11 --version
          g++-11 --version
      - name: Build & Test
        shell: bash
        run: |
          mkdir report
          for optimization in -O -O1 -O2 -O3 -Ofast -Og -Os; do
            for processes in `seq 1 8`; do
              for i in `seq 100 -1 1` ; do 
                ${{ matrix.cxx }} multithread/main.cpp lib/big_int.cpp -o main.exe $optimization -std=c++20 -pthread -lpthread
                { time ./main.exe -np $processes -n $i >> report/output-${{ matrix.os }}-$processes$optimization.txt; } 2>> report/report-${{ matrix.os }}-$processes$optimization.txt;
              done
            done
          done
      - name: Upload Report ðŸš€
        uses: actions/upload-artifact@v1
        with:
          name: report
          path: report/